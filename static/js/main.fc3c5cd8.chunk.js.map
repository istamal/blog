{"version":3,"sources":["actions/index.js","components/AnimatedHeart.jsx","components/RenderPosts.jsx","components/Login.jsx","components/Signup.jsx","components/Post.jsx","components/Header.jsx","components/Footer.jsx","components/AddPost.jsx","components/EditPost.jsx","App.jsx","serviceWorker.js","redusers/index.js","index.jsx"],"names":["axios","interceptors","request","use","config","token","localStorage","getItem","newConfig","headers","common","Authorization","error","Promise","reject","setArticles","data","type","payload","setFilteredArticles","tag","addErrorMsg","err","setAuth","auth","setPostChangeStatusToNone","addUserData","user","fatchFavorite","slug","dispatch","a","post","response","article","alert","unFavorite","delete","connect","state","favoriteRequestsStatus","HeartFilled","style","color","className","actionCreators","setSlug","getArticles","get","getPageArticles","page","offsetVal","deleteArticle","actions","filterByTag","resetFilter","RenderPosts","props","handleLike","evt","title","target","closest","getAttribute","setState","handleOfGettingArticles","componentDidMount","this","articles","requestStatus","filteredBy","onClick","to","map","item","key","uniqueId","alt","src","author","image","formatDistance","Date","createdAt","now","addSuffix","username","body","tagList","length","favoritesCount","favorited","active","avatar","onChange","defaultCurrent","total","totalCount","React","Component","defaultProps","authenticate","values","path","setItem","errors","Login","loginValidation","Yup","shape","email","required","password","min","matches","formik","useFormik","initialValues","validationSchema","onSubmit","touched","handleBlur","handleChange","handleSubmit","errorMsg","name","placeholder","prefix","UserOutlined","value","onBlur","Password","LockOutlined","emailOrPassword","disabled","htmlType","addUser","singupValidation","label","actionCreaters","getTargetArticle","endpoint","deletePost","options","method","url","then","status","Post","id","changePostStatus","danger","Header","isAuth","icon","clear","Footer","MailOutlined","href","addPost","postValuesValidation","description","render","TextArea","arrayHelpers","index","remove","insert","push","editPost","newValues","EditPost","authenticateWithToken","App","basename","exact","component","Signup","Boolean","window","location","hostname","match","combineReducers","action","articlesCount","newArticles","store","createStore","rootReducer","compose","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.fc3c5cd8.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    const newConfig = config;\n    if (token) {\n      newConfig.headers.common.Authorization = `Token ${token}`;\n    }\n    return newConfig;\n  },\n  error => Promise.reject(error),\n);\n\nexport const setSlug = slug => ({\n  type: 'SET_SLUG',\n  payload: {\n    slug,\n  },\n});\n\nexport const requestSend = () => ({\n  type: 'REQUEST_SEND',\n});\n\nexport const requestSuccess = () => ({\n  type: 'REQUEST_SUCCESS',\n});\n\nexport const requestFailure = () => ({\n  type: 'REQUEST_FAILURE',\n});\n\nexport const setArticles = data => ({\n  type: 'SET_ARTICLES',\n  payload: {\n    data,\n  },\n});\n\nexport const setArticle = article => ({\n  type: 'SET_ARTICLE',\n  payload: {\n    article,\n  },\n});\n\nexport const deleteArticle = () => ({\n  type: 'DELETE_ARTICLE',\n});\n\nexport const getArticles = () => async dispatch => {\n  dispatch(requestSend());\n  try {\n    const response = await axios.get('https://conduit.productionready.io/api/articles?limit=10');\n    dispatch(setArticles(response.data));\n    dispatch(requestSuccess());\n  } catch (err) {\n    dispatch(requestFailure());\n  }\n};\n\nexport const setFilteredArticles = (data, tag) => ({\n  type: 'SET_FILTERED_ARTICLES',\n  payload: {\n    data,\n    tag,\n  },\n});\n\nexport const resetFilter = () => ({\n  type: 'RESET_FILTER',\n});\n\nexport const filterByTag = tag => async dispatch => {\n  dispatch(requestSend());\n  try {\n    const response = await axios.get(\n      `https://conduit.productionready.io/api/articles?limit=10&tag=${tag}`,\n    );\n    dispatch(setFilteredArticles(response.data, tag));\n    dispatch(requestSuccess());\n  } catch (err) {\n    dispatch(requestFailure());\n  }\n};\n\nexport const addErrorMsg = err => ({\n  type: 'ADD_ERROR_MESSAGE',\n  payload: {\n    err,\n  },\n});\n\nexport const getPageArticles = page => async dispatch => {\n  dispatch(requestSend());\n  try {\n    const offsetVal = (page - 1) * 10;\n    const response = await axios.get(\n      `https://conduit.productionready.io/api/articles?limit=10&offset=${offsetVal}`,\n    );\n    dispatch(setArticles(response.data));\n    dispatch(requestSuccess());\n  } catch (err) {\n    dispatch(requestFailure());\n  }\n};\n\nexport const getTargetArticle = endpoint => async dispatch => {\n  dispatch(requestSend());\n  try {\n    const response = await axios.get(`https://conduit.productionready.io/api${endpoint}`);\n    dispatch(setArticle(response.data.article));\n    dispatch(requestSuccess());\n  } catch (err) {\n    dispatch(requestFailure());\n  }\n};\n\nexport const setAuth = auth => ({\n  type: 'SET_AUTH',\n  payload: {\n    auth,\n  },\n});\n\nexport const postChangeRequest = () => ({\n  type: 'POST_CHANGE_REQUESTED',\n});\n\nexport const postChangeSuccess = () => ({\n  type: 'POST_CHANGE_SUCCESS',\n});\n\nexport const postChangeFailure = () => ({\n  type: 'POST_CHANGE_FAILURE',\n});\n\nexport const setPostChangeStatusToNone = () => ({\n  type: 'SET_POSTCHANGE_STATUS_TO_NONE',\n});\n\nexport const addPost = values => async dispatch => {\n  dispatch(postChangeRequest());\n  try {\n    const options = {\n      method: 'Post',\n      data: { article: values },\n      url: 'https://conduit.productionready.io/api/articles',\n    };\n    axios(options).then(response => {\n      if (response.status === 200) {\n        return dispatch(postChangeSuccess());\n      }\n      return dispatch(postChangeFailure());\n    });\n  } catch (err) {\n    dispatch(postChangeFailure());\n  }\n};\n\nexport const editPost = (values, slug) => async dispatch => {\n  const newValues = values;\n  if (!newValues.tagList.length > 0) {\n    newValues.tagList = [''];\n  }\n  dispatch(postChangeRequest());\n  try {\n    const options = {\n      method: 'Put',\n      data: { article: newValues },\n      url: `https://conduit.productionready.io/api/articles/${slug}`,\n    };\n    axios(options).then(response => {\n      if (response.status === 200) {\n        return dispatch(postChangeSuccess());\n      }\n      return dispatch(postChangeFailure());\n    });\n  } catch (err) {\n    dispatch(postChangeFailure());\n  }\n};\n\nexport const deletePost = slug => async dispatch => {\n  dispatch(postChangeRequest());\n  try {\n    const options = {\n      method: 'Delete',\n      url: `https://conduit.productionready.io/api/articles/${slug}`,\n    };\n    axios(options).then(response => {\n      if (response.status === 200) {\n        return dispatch(postChangeSuccess());\n      }\n      return dispatch(postChangeFailure());\n    });\n  } catch (err) {\n    dispatch(postChangeFailure());\n  }\n};\n\nexport const addUserData = user => ({\n  type: 'ADD_USERDATA',\n  payload: {\n    user,\n  },\n});\n\nexport const addUser = (values, path) => async dispatch => {\n  dispatch(requestSend());\n  try {\n    const response = await axios.post(path, { user: values });\n    dispatch(addUserData(response.data));\n    localStorage.setItem('user', response.data.user.username);\n    dispatch(requestSuccess());\n    dispatch(setAuth());\n  } catch (error) {\n    dispatch(addErrorMsg(error.response.data.errors));\n    dispatch(requestFailure());\n  }\n};\n\nexport const authenticate = (values, path) => async dispatch => {\n  dispatch(requestSend());\n  try {\n    const response = await axios.post(path, { user: values });\n    dispatch(addUserData(response.data.user));\n    localStorage.setItem('user', response.data.user.username);\n    localStorage.setItem('token', response.data.user.token);\n    dispatch(requestSuccess());\n    await dispatch(setAuth(false));\n  } catch (error) {\n    dispatch(requestFailure());\n    dispatch(addErrorMsg(error.response.data.errors));\n  }\n};\n\nexport const authenticateWithToken = () => async dispatch => {\n  try {\n    const response = await axios.get('https://conduit.productionready.io/api/user');\n    localStorage.setItem('token', response.data.user.token);\n    dispatch(addUserData(response.data.user));\n    dispatch(setAuth(false));\n  } catch (error) {\n    localStorage.clear();\n    dispatch(setAuth(true));\n    throw error;\n  }\n};\n\nexport const setFavorited = article => ({\n  type: 'SET_FAVORITED',\n  payload: {\n    article,\n  },\n});\n\nexport const deleteFavorited = article => ({\n  type: 'DELETE_FAVORITED',\n  payload: {\n    article,\n  },\n});\n\nexport const requestFavorite = () => ({\n  type: 'FAVORITE_REQUESTED',\n});\n\nexport const favoriteSuccess = () => ({\n  type: 'FAVORITE_SUCCESS',\n});\n\nexport const favoriteFailure = () => ({\n  type: 'FAVORITE_FAILURE',\n});\n\nexport const fatchFavorite = slug => async dispatch => {\n  dispatch(requestFavorite());\n  try {\n    const response = await axios.post(\n      `https://conduit.productionready.io/api/articles/${slug}/favorite`,\n    );\n    dispatch(setFavorited(response.data.article));\n    dispatch(favoriteSuccess());\n  } catch (err) {\n    dispatch(favoriteFailure());\n    alert('Вы не авторизованы, войдите чтобы отметить запись.');\n  }\n};\n\nexport const unFavorite = slug => async dispatch => {\n  dispatch(requestFavorite());\n  try {\n    const response = await axios.delete(\n      `https://conduit.productionready.io/api/articles/${slug}/favorite`,\n    );\n    dispatch(deleteFavorited(response.data.article));\n    dispatch(favoriteSuccess());\n  } catch (err) {\n    dispatch(favoriteFailure());\n  }\n};\n","import React from 'react';\nimport { HeartFilled } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\n\nconst mapStateToProps = (state) => ({\n  favoriteRequestsStatus: state.favoriteRequestsStatus,\n});\n\nconst AnimatedHeart = ({ favoriteRequestsStatus }) => (\n  favoriteRequestsStatus === 'requested'\n  && <HeartFilled style={{ color: 'red' }} className=\"animated\" />\n);\n\nAnimatedHeart.propTypes = {\n  favoriteRequestsStatus: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps)(AnimatedHeart);\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport { Tag, Pagination, Skeleton } from 'antd';\nimport { HeartFilled } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\nimport { connect } from 'react-redux';\nimport { uniqueId } from 'lodash';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions/index';\nimport AnimatedHeart from './AnimatedHeart';\n\nconst mapStateToProps = state => ({\n  articles: state.articles,\n  requestStatus: state.requestStatus,\n  filteredBy: state.filteredBy,\n});\n\nconst actionCreators = {\n  setSlug: actions.setSlug,\n  getArticles: actions.getArticles,\n  getPageArticles: actions.getPageArticles,\n  deleteArticle: actions.deleteArticle,\n  fatchFavorite: actions.fatchFavorite,\n  unFavorite: actions.unFavorite,\n  filterByTag: actions.filterByTag,\n  resetFilter: actions.resetFilter,\n};\n\nclass RenderPosts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      slug: '',\n    };\n  }\n\n  handleLike = evt => {\n    const { target } = evt;\n    const title = target.closest('.card__content').getAttribute('data');\n    this.setState({ slug: title });\n  };\n\n  handleOfGettingArticles = () => {\n    const { getArticles, deleteArticle, resetFilter } = this.props;\n    deleteArticle();\n    getArticles();\n    resetFilter();\n  };\n\n  componentDidMount = () => {\n    this.handleOfGettingArticles();\n  };\n\n  render() {\n    const { slug } = this.state;\n\n    const {\n      articles,\n      getPageArticles,\n      setSlug,\n      requestStatus,\n      fatchFavorite,\n      unFavorite,\n      filterByTag,\n      filteredBy,\n    } = this.props;\n    return (\n      <main className=\"container padding-top margin-bottom\">\n        <div className=\"nav-links margin-bottom\">\n          <Link onClick={this.handleOfGettingArticles} className=\"nav-link\" to=\"/\">\n            Все статьи\n            {' >'}\n          </Link>\n          {filteredBy && <span className=\"nav-link\">{` ${filteredBy}`}</span>}\n        </div>\n        {filteredBy && (\n          <div className=\"margin-bottom\">\n            Все статьи с меткой <Tag color=\"orangered\">{filteredBy}</Tag>\n          </div>\n        )}\n        {requestStatus === 'success' &&\n          articles.articles.map(item => (\n            <div key={uniqueId()} className=\"post-card\">\n              <img className=\"avatar\" alt=\"AVATAR\" src={item.author.image} />\n              <div className=\"card__content\" data={item.slug}>\n                <Link\n                  onClick={() => setSlug(item.slug)}\n                  to={`/articles/${item.slug}`}\n                  className=\"title\"\n                >\n                  {item.title}\n                </Link>\n                <div className=\"meta\">\n                  <span className=\"date\">\n                    {formatDistance(new Date(item.createdAt), Date.now(), { addSuffix: true })}\n                  </span>\n                  <span className=\"author\">{item.author.username}</span>\n                </div>\n                <p>{item.body}</p>\n                <div className=\"links\">\n                  {item.tagList.length\n                    ? item.tagList.map(tag => (\n                        <Tag key={uniqueId()} color=\"orangered\" onClick={() => filterByTag(tag)}>\n                          {tag}\n                        </Tag>\n                      ))\n                    : null}\n                  <span className=\"favorites-count\">{item.favoritesCount}</span>\n                  {item.favorited ? (\n                    <span className=\"heart-container\" onClick={this.handleLike}>\n                      <HeartFilled style={{ color: 'red' }} onClick={() => unFavorite(item.slug)} />\n                      {item.slug === slug && <AnimatedHeart />}\n                    </span>\n                  ) : (\n                    <span className=\"heart-container\" onClick={this.handleLike}>\n                      <HeartFilled onClick={() => fatchFavorite(item.slug)} />\n                      {item.slug === slug && <AnimatedHeart />}\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        {requestStatus === 'requested' && (\n          <>\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n            <Skeleton active avatar />\n          </>\n        )}\n        {requestStatus === 'failure' && (\n          <div className=\"max-width margin-bottom\">\n            <p>Возможно проблемы с интернетом перезагрузите страницу позже</p>\n          </div>\n        )}\n        <div className=\"max-width\">\n          <Pagination onChange={getPageArticles} defaultCurrent=\"1\" total={articles.totalCount} />\n        </div>\n      </main>\n    );\n  }\n}\n\nRenderPosts.propTypes = {\n  getArticles: PropTypes.func.isRequired,\n  articles: PropTypes.object,\n  getPageArticles: PropTypes.func.isRequired,\n  setSlug: PropTypes.func.isRequired,\n  deleteArticle: PropTypes.func.isRequired,\n  requestStatus: PropTypes.string.isRequired,\n  fatchFavorite: PropTypes.func.isRequired,\n  unFavorite: PropTypes.func.isRequired,\n  filterByTag: PropTypes.func.isRequired,\n  filteredBy: PropTypes.string.isRequired,\n  resetFilter: PropTypes.func.isRequired,\n};\n\nRenderPosts.defaultProps = {\n  articles: {},\n};\n\nexport default connect(mapStateToProps, actionCreators)(RenderPosts);\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport { Input, Button, Spin } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport * as actions from '../actions/index';\n\nconst actionCreators = {\n  authenticate: actions.authenticate,\n};\n\nconst mapStateToProps = (state) => ({\n  errorMsg: state.errorMsg,\n  requestStatus: state.requestStatus,\n});\n\nconst Login = (props) => {\n  const loginValidation = Yup.object().shape({\n    email: Yup.string()\n      .email('Укожите корректный email')\n      .required('Обязательное поле'),\n    password: Yup.string()\n      .required('Вы не ввели пароль')\n      .min(8, 'Должно быть не менее 8 символов')\n      .matches(/(?=.*[0-9])/, 'Пароль должень содержать хотя бы одну цифру')\n      .matches(/(?=.*[a-z])/, 'Пароль должень содержать хотя бы одну букву латинского алфавита'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: loginValidation,\n    onSubmit: (values) => {\n      const { authenticate } = props;\n      authenticate(values, 'https://conduit.productionready.io/api/users/login');\n    },\n  });\n\n  const {\n    errors, values, touched, handleBlur, handleChange, handleSubmit,\n  } = formik;\n\n  const { errorMsg, requestStatus } = props;\n\n  return (\n    <div className=\"container padding-top\">\n      <div className=\"nav-links margin-bottom\">\n        <Link className=\"nav-link\" to=\"/\">\n          Все статьи\n          {' >'}\n        </Link>\n        <Link className=\"nav-link\" to=\"/login\">\n          {' '}\n          Войти\n        </Link>\n      </div>\n      <form name=\"normal_login\" onSubmit={handleSubmit}>\n        <div className=\"margin-bottom\">\n          <Input\n            name=\"email\"\n            placeholder=\"E-mail\"\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          {errors.email && touched.email && <div className=\"red\">{errors.email}</div>}\n        </div>\n        <div className=\"margin-bottom\">\n          <Input.Password\n            name=\"password\"\n            placeholder=\"Пароль\"\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          {errors.password && touched.password && <div className=\"red\">{errors.password}</div>}\n        </div>\n        {errorMsg && <div className=\"red\">{errorMsg.emailOrPassword}</div>}\n        <Button\n          disabled={requestStatus === 'requested'}\n          htmlType=\"submit\"\n          className=\"margin-right\"\n          type=\"primary\"\n        >\n          Войти\n        </Button>\n        {requestStatus === 'requested' && <Spin className=\"left-margin margin-right\" />}\n        <Link to=\"/signup\">Регистрация</Link>\n      </form>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n  emailOrPassword: PropTypes.string,\n  requestStatus: PropTypes.string.isRequired,\n  errorMsg: PropTypes.object,\n};\n\nLogin.defaultProps = {\n  errorMsg: null,\n  emailOrPassword: '',\n};\n\nexport default connect(mapStateToProps, actionCreators)(Login);\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport * as Yup from 'yup';\nimport * as actions from '../actions/index';\n\nconst actionCreators = {\n  addUser: actions.addUser,\n};\n\nconst mapStateToProps = (state) => ({\n  errorMsg: state.errorMsg,\n  requestStatus: state.requestStatus,\n});\n\nconst Signup = ({ errorMsg, requestStatus, addUser }) => {\n  const singupValidation = Yup.object().shape({\n    email: Yup.string()\n      .email('Укожите корректный email')\n      .required('Обязательное поле'),\n    password: Yup.string()\n      .required('Вы не ввели пароль')\n      .min(8, 'Должно быть не менее 8 символов')\n      .matches(/(?=.*[0-9])/, 'Пароль должень содержать хотя бы одну цифру')\n      .matches(/(?=.*[a-z])/, 'Пароль должень содержать хотя бы одну букву латинского алфавита'),\n    username: Yup.string()\n      .required('Вы не ввели имя пользователя'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: singupValidation,\n    onSubmit: (values) => {\n      addUser(values, 'https://conduit.productionready.io/api/users');\n    },\n  });\n\n  const {\n    values, errors, touched, handleChange, handleSubmit, handleBlur,\n  } = formik;\n\n  const renderForm = () => (\n    <div className=\"container padding-top\">\n      <div className=\"nav-links margin-bottom\">\n        <Link className=\"nav-link\" to=\"/\">\n          Все статьи\n          {' >'}\n        </Link>\n        <Link className=\"nav-link\" to=\"/signup\">\n          {' '}\n          Регистрация\n        </Link>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <div className=\"margin-bottom\">\n          <Input\n            name=\"email\"\n            placeholder=\"E-mail\"\n            label=\"E-mail\"\n            type=\"email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          {errorMsg && <div className=\"red\">{errorMsg.email}</div>}\n          {errors.email && touched.email && <div className=\"red\">{errors.email}</div>}\n        </div>\n        <div className=\"margin-bottom\">\n          <Input.Password\n            name=\"password\"\n            placeholder=\"Пароль\"\n            label=\"Password\"\n            type=\"password\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          {errorMsg && <div className=\"red\">{errorMsg.password}</div>}\n          {errors.password && touched.password && <div className=\"red\">{errors.password}</div>}\n        </div>\n        <div className=\"margin-bottom\">\n          <Input\n            placeholder=\"Имя Пользователя\"\n            name=\"username\"\n            label=\"Nickname\"\n            value={values.username}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          {errorMsg && <div className=\"red\">{errorMsg.username}</div>}\n          {errors.username && touched.username && <div className=\"red\">{errors.username}</div>}\n        </div>\n        <Button className=\"margin-right\" type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n        {requestStatus === 'requested' && <Spin className=\"left-margin\" />}\n        <Link to=\"/login\">Войти</Link>\n      </form>\n    </div>\n  );\n\n  return renderForm();\n};\n\nexport default connect(mapStateToProps, actionCreators)(Signup);\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\nimport { HeartFilled } from '@ant-design/icons';\nimport { Tag, Spin, Button, Skeleton } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions/index';\nimport AnimatedHeart from './AnimatedHeart';\n\nconst actionCreaters = {\n  getTargetArticle: actions.getTargetArticle,\n  deletePost: actions.deletePost,\n  unFavorite: actions.unFavorite,\n  fatchFavorite: actions.fatchFavorite,\n  setPostChangeStatusToNone: actions.setPostChangeStatusToNone,\n};\n\nconst mapStateToProps = state => ({\n  article: state.article,\n  slug: state.slug,\n  changePostStatus: state.changePostStatus,\n  requestStatus: state.requestStatus,\n  user: state.user,\n});\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.id = 0;\n  }\n\n  componentDidMount = () => {\n    const { getTargetArticle, slug } = this.props;\n    getTargetArticle(`/articles/${slug}`);\n  };\n\n  render() {\n    const {\n      article,\n      changePostStatus,\n      setPostChangeStatusToNone,\n      slug,\n      deletePost,\n      unFavorite,\n      fatchFavorite,\n      user,\n    } = this.props;\n\n    if (changePostStatus === 'success') {\n      return (\n        <div className=\"container post-card padding-top\">\n          <p className=\"margin-right\">Пост успешно удолен</p>\n          <br />\n          <Link onClick={() => setPostChangeStatusToNone()} to=\"/\">\n            ok\n          </Link>\n        </div>\n      );\n    }\n    return article ? (\n      <main className=\"padding-top\">\n        <div className=\"nav-links container margin-bottom\">\n          <Link className=\"nav-link\" to=\"/\">\n            Все статьи\n            {' >'}\n          </Link>\n          <Link className=\"nav-link\" to={`/articles/${article.slug}`}>\n            {' '}\n            Страница поста\n          </Link>\n        </div>\n        <div className=\"post-card container\">\n          <img className=\"avatar\" alt=\"AVATAR\" src={article.author.image} />\n          <div className=\"card__content\">\n            <h1 className=\"title\">{article.title}</h1>\n            <div className=\"meta\">\n              <span className=\"date\">\n                {formatDistance(new Date(article.createdAt), Date.now(), { addSuffix: true })}\n              </span>\n              <span className=\"author\">{article.author.username}</span>\n            </div>\n            <p>{article.body}</p>\n            <div className=\"links\">\n              {article.tagList.length\n                ? article.tagList.map(tag => {\n                    this.id += 1;\n                    return (\n                      <Tag key={this.id} color=\"orangered\">\n                        {tag}\n                      </Tag>\n                    );\n                  })\n                : null}\n              <span className=\"favorites-count\">{article.favoritesCount}</span>\n              {article.favorited ? (\n                <span className=\"heart-container\">\n                  <HeartFilled\n                    style={{ color: 'red' }}\n                    onClick={() => unFavorite(article.slug)}\n                    className=\"like\"\n                  />\n                  <AnimatedHeart />\n                </span>\n              ) : (\n                <span className=\"heart-container\">\n                  <HeartFilled onClick={() => fatchFavorite(article.slug)} className=\"like\" />\n                  <AnimatedHeart />\n                </span>\n              )}\n            </div>\n            {article.author.username === user.username && (\n              <div className=\"remove\">\n                <Button\n                  className=\"margin-right\"\n                  disabled={changePostStatus === 'sended'}\n                  onClick={() => deletePost(slug)}\n                  type=\"primary\"\n                  danger\n                >\n                  Удолить\n                </Button>\n                {changePostStatus === 'sended' && <Spin className=\"margin-right\" />}\n                <Button disabled={changePostStatus === 'sended'} type=\"primary\">\n                  <Link to={`/articles/${slug}/edit`}>Изменить</Link>\n                </Button>\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n    ) : (\n      <div className=\"padding-top container max-width margin-bottom\">\n        <Skeleton active avatar />\n      </div>\n    );\n  }\n}\n\nPost.propTypes = {\n  article: PropTypes.object,\n  changePostStatus: PropTypes.string.isRequired,\n  setPostChangeStatusToNone: PropTypes.func.isRequired,\n  slug: PropTypes.string.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  getTargetArticle: PropTypes.func.isRequired,\n  unFavorite: PropTypes.func.isRequired,\n  fatchFavorite: PropTypes.func.isRequired,\n  user: PropTypes.object,\n};\n\nPost.defaultProps = {\n  article: null,\n  user: null,\n};\n\nexport default connect(mapStateToProps, actionCreaters)(Post);\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport { Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { UserOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions/index';\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.isAuth,\n  user: state.user,\n});\n\nconst actionCreators = {\n  setAuth: actions.setAuth,\n};\n\nconst Header = ({ setAuth, isAuth, user }) => {\n  const handleAuth = () => {\n    setAuth(isAuth);\n    localStorage.clear();\n  };\n\n  return (\n    <header>\n      <div className=\"header__wrapper container\">\n        <Link to=\"/\">\n          <h1 className=\"logo\">Blog</h1>\n        </Link>\n        <div className=\"user\">\n          {isAuth && (\n            <Link className=\"user-btn margin-right\" to=\"/add\">\n              Добавить пост\n            </Link>\n          )}\n          <div className=\"user-name\">\n            <Avatar icon={<UserOutlined />} />\n            {isAuth ? (\n              <span className=\"user-nick\">{user.username}</span>\n            ) : (\n              <span className=\"user-nick\">Вы не авторизованы</span>\n            )}\n          </div>\n          {isAuth ? (\n            <Link onClick={handleAuth} className=\"user-btn\" to=\"/\">\n              Выйти\n            </Link>\n          ) : (\n            <Link className=\"user-btn\" to=\"/login\">\n              Войти\n            </Link>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  setAuth: PropTypes.func.isRequired,\n  isAuth: PropTypes.bool.isRequired,\n  user: PropTypes.object,\n};\n\nHeader.defaultProps = {\n  user: null,\n};\n\nexport default connect(mapStateToProps, actionCreators)(Header);\n","import React from 'react';\nimport { MailOutlined } from '@ant-design/icons';\n\nconst Footer = () => (\n  <div className=\"footer\">\n    <p>Desined by Istamal Dagalaev</p>\n    <MailOutlined className=\"m-right-gap\" />\n    <a href=\"mailto:dagalaev@gmail.com\">dagalaev@gmail.com</a>\n  </div>\n);\n\nexport default Footer;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport {\n  Formik, Form, FieldArray, Field,\n} from 'formik';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport * as Yup from 'yup';\nimport * as actions from '../actions/index';\n\nconst mapStateToProps = (state) => ({\n  changePostStatus: state.changePostStatus,\n});\n\nconst actionCreators = {\n  addPost: actions.addPost,\n  setPostChangeStatusToNone: actions.setPostChangeStatusToNone,\n};\n\nconst AddPost = ({ changePostStatus, setPostChangeStatusToNone, addPost }) => {\n  const postValuesValidation = Yup.object().shape({\n    title: Yup.string()\n      .required('Обязательное поле')\n      .min(3, 'Не менее 3 символов'),\n    description: Yup.string()\n      .required('Обязательное поле')\n      .min(10, 'Не менее 10 символов'),\n    body: Yup.string()\n      .required('Обязательное поле')\n      .min(20, 'Не менее 20 символов'),\n  });\n\n  return changePostStatus === 'success' ? (\n    <main className=\"container post-card padding-top\">\n      <p className=\"margin-right\">Пост успешно добавлен</p>\n      <br />\n      <Link onClick={() => setPostChangeStatusToNone()} to=\"/\">\n        ok\n      </Link>\n    </main>\n  ) : (\n    <div className=\"container padding-top\">\n      <div className=\"nav-links margin-bottom\">\n        <Link className=\"nav-link\" to=\"/\">\n          Все статьи\n          {' >'}\n        </Link>\n        <Link className=\"nav-link\" to=\"/add\">\n          {' '}\n          Добавить статью\n        </Link>\n      </div>\n      <Formik\n        initialValues={{\n          title: '',\n          description: '',\n          body: '',\n          tagList: [],\n        }}\n        validationSchema={postValuesValidation}\n        onSubmit={(values) => {\n          addPost(values);\n        }}\n        render={({\n          values, handleChange, errors, handleBlur, touched,\n        }) => (\n          <Form>\n            <div className=\"margin-bottom\">\n              <Input\n                placeholder=\"Заголовок\"\n                name=\"title\"\n                value={values.title}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.title && touched.title && <div className=\"red s-size\">{errors.title}</div>}\n            </div>\n            <div className=\"margin-bottom\">\n              <Input\n                placeholder=\"Описание\"\n                name=\"description\"\n                value={values.description}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.description && touched.description && (\n              <div className=\"red s-size\">{errors.description}</div>\n              )}\n            </div>\n            <div className=\"margin-bottom\">\n              <Input.TextArea\n                placeholder=\"Текст\"\n                name=\"body\"\n                value={values.body}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.body && touched.body && <div className=\"red s-size\">{errors.body}</div>}\n            </div>\n            <FieldArray\n              placeholder=\"Метки\"\n              name=\"tagList\"\n              render={(arrayHelpers) => (\n                <div>\n                  {values.tagList && values.tagList.length > 0 ? (\n                    values.tagList.map((tag, index) => (\n                      <div key={index}>\n                        <Field\n                          className=\"input margin-bottom m-right-gap\"\n                          name={`tagList.${index}`}\n                        />\n                        <Button\n                          type=\"button\"\n                          className=\"m-right-gap\"\n                          danger\n                          onClick={() => arrayHelpers.remove(index)}\n                        >\n                          -\n                        </Button>\n                        <Button type=\"button\" onClick={() => arrayHelpers.insert(index, '')}>\n                          +\n                        </Button>\n                      </div>\n                    ))\n                  ) : (\n                    <Button\n                      className=\"margin-bottom\"\n                      type=\"primary\"\n                      onClick={() => arrayHelpers.push('')}\n                    >\n                      Добавить тег\n                    </Button>\n                  )}\n                  <div>\n                    <Button\n                      className=\"margin-right\"\n                      disabled={changePostStatus === 'sended'}\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                    >\n                      Отправить\n                    </Button>\n                    {changePostStatus === 'sended' && <Spin className=\"margin-right\" />}\n                  </div>\n                </div>\n              )}\n            />\n          </Form>\n        )}\n      />\n    </div>\n  );\n};\n\nAddPost.propTypes = {\n  changePostStatus: PropTypes.string.isRequired,\n  setPostChangeStatusToNone: PropTypes.func.isRequired,\n  addPost: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(AddPost);\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport {\n  Formik,\n  Form,\n  FieldArray,\n  Field,\n} from 'formik';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport * as Yup from 'yup';\nimport * as actions from '../actions/index';\n\nconst mapStateToProps = (state) => ({\n  changePostStatus: state.changePostStatus,\n  article: state.article,\n  slug: state.slug,\n});\n\nconst actionCreators = {\n  editPost: actions.editPost,\n  setPostChangeStatusToNone: actions.setPostChangeStatusToNone,\n};\n\nconst EditPost = (props) => {\n  const postValuesValidation = Yup.object().shape({\n    title: Yup.string()\n      .required('Обязательное поле')\n      .min(3, 'Не менее 3 символов'),\n    description: Yup.string()\n      .required('Обязательное поле')\n      .min(10, 'Не менее 10 символов'),\n    body: Yup.string()\n      .required('Обязательное поле')\n      .min(20, 'Не менее 20 символов'),\n  });\n\n  const {\n    changePostStatus,\n    setPostChangeStatusToNone,\n    editPost,\n    article,\n    slug,\n  } = props;\n\n  return changePostStatus === 'success' ? (\n    <main className=\"container post-card padding-top\">\n      <p className=\"margin-right\">Изменения добавлены</p>\n      <br />\n      <Link onClick={() => setPostChangeStatusToNone()} to=\"/\">\n        ok\n      </Link>\n    </main>\n  ) : (\n    <div className=\"container padding-top\">\n      <div className=\"nav-links margin-bottom\">\n        <Link className=\"nav-link\" to=\"/\">\n          Все статьи\n          {' >'}\n        </Link>\n        <Link className=\"nav-link\" to={`/articles/${slug}/edit`}>\n          {' '}\n          Изменить статью\n        </Link>\n      </div>\n      <Formik\n        initialValues={{\n          title: article.title,\n          description: article.description,\n          body: article.body,\n          tagList: [...article.tagList],\n        }}\n        validationSchema={postValuesValidation}\n        onSubmit={(values) => {\n          editPost(values, slug);\n        }}\n        render={({\n          values,\n          handleChange,\n          errors,\n          handleBlur,\n          touched,\n        }) => (\n          <Form>\n            <div className=\"margin-bottom\">\n              <Input\n                placeholder=\"Заголовок\"\n                name=\"title\"\n                value={values.title}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.title && touched.title && <div className=\"red s-size\">{errors.title}</div>}\n            </div>\n            <div className=\"margin-bottom\">\n              <Input\n                placeholder=\"Описание\"\n                name=\"description\"\n                value={values.description}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.description && touched.description && (\n              <div className=\"red s-size\">{errors.description}</div>\n              )}\n            </div>\n            <div className=\"margin-bottom\">\n              <Input.TextArea\n                placeholder=\"Текст\"\n                name=\"body\"\n                value={values.body}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.body && touched.body && <div className=\"red s-size\">{errors.body}</div>}\n            </div>\n            <div className=\"margin-bottom\">\n              <FieldArray\n                placeholder=\"Метки\"\n                name=\"tagList\"\n                render={(arrayHelpers) => (\n                  <div>\n                    {values.tagList && values.tagList.length > 0 ? (\n                      values.tagList.map((tag, index) => (\n                        <div key={index}>\n                          <Field\n                            className=\"input margin-bottom m-right-gap\"\n                            name={`tagList[${index}]`}\n                          />\n                          <Button\n                            type=\"button\"\n                            className=\"m-right-gap\"\n                            danger\n                            onClick={() => arrayHelpers.remove(index)}\n                          >\n                            -\n                          </Button>\n                          <Button type=\"button\" onClick={() => arrayHelpers.insert(index, '')}>\n                            +\n                          </Button>\n                        </div>\n                      ))\n                    ) : (\n                      <Button\n                        className=\"margin-bottom\"\n                        type=\"primary\"\n                        onClick={() => arrayHelpers.push('')}\n                      >\n                        Добавить тег\n                      </Button>\n                    )}\n                    <div>\n                      <Button\n                        className=\"margin-right\"\n                        disabled={changePostStatus === 'sended'}\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                      >\n                        Сочранить\n                      </Button>\n                      {changePostStatus === 'sended' && <Spin className=\"margin-right\" />}\n                    </div>\n                  </div>\n                )}\n              />\n            </div>\n          </Form>\n        )}\n      />\n    </div>\n  );\n};\n\nEditPost.propTypes = {\n  changePostStatus: PropTypes.func.isRequired,\n  setPostChangeStatusToNone: PropTypes.func.isRequired,\n  editPost: PropTypes.func.isRequired,\n  article: PropTypes.object,\n  slug: PropTypes.string.isRequired,\n};\n\nEditPost.defaultProps = {\n  article: null,\n};\n\nexport default connect(mapStateToProps, actionCreators)(EditPost);\n","import React from 'react';\nimport './App.scss';\nimport 'antd/dist/antd.css';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport RenderPosts from './components/RenderPosts';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Post from './components/Post';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport AddPost from './components/AddPost';\nimport * as actions from './actions/index';\nimport EditPost from './components/EditPost';\n\nconst mapStateToProps = state => ({\n  isAuth: state.isAuth,\n  slug: state.slug,\n});\n\nconst actionCreators = {\n  authenticateWithToken: actions.authenticateWithToken,\n};\n\nclass App extends React.Component {\n  componentDidMount = () => {\n    const { authenticateWithToken } = this.props;\n    if (localStorage.getItem('token')) {\n      authenticateWithToken();\n    }\n  };\n\n  render() {\n    const { slug, isAuth } = this.props;\n    return (\n      <div className=\"wrapper\">\n        <Router basename=\"/blog\">\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={RenderPosts} />\n            <Route exact path={`/articles/${slug}`} component={Post} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/login\" render={() => (isAuth ? <Redirect to=\"/\" /> : <Login />)} />\n            <Route path=\"/add\" render={() => (isAuth ? <AddPost /> : <Redirect to=\"/Login\" />)} />\n            <Route path={`/articles/${slug}/edit`} component={EditPost} />\n          </Switch>\n          <Footer />\n        </Router>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  slug: PropTypes.string,\n  isAuth: PropTypes.bool.isRequired,\n  authenticateWithToken: PropTypes.func.isRequired,\n};\n\nApp.defaultProps = {\n  slug: null,\n};\n\nexport default connect(mapStateToProps, actionCreators)(App);\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\n\nconst requestStatus = (state = 'none', action) => {\n  switch (action.type) {\n    case 'REQUEST_SEND':\n      return 'requested';\n    case 'REQUEST_SUCCESS':\n      return 'success';\n    case 'REQUEST_FAILURE':\n      return 'failure';\n    default:\n      return state;\n  }\n};\n\nconst article = (state = null, action) => {\n  if (action.type === 'SET_ARTICLE') {\n    return action.payload.article;\n  }\n  if (action.type === 'DELETE_ARTICLE') {\n    return null;\n  }\n  if (action.type === 'SET_FAVORITED' || action.type === 'DELETE_FAVORITED') {\n    return action.payload.article;\n  }\n  return state;\n};\n\nconst slug = (state = null, action) => {\n  if (action.type === 'SET_SLUG') {\n    return action.payload.slug;\n  }\n  return state;\n};\n\nconst changePostStatus = (state = 'none', action) => {\n  if (action.type === 'POST_CHANGE_REQUESTED') {\n    return 'sended';\n  }\n  if (action.type === 'POST_CHANGE_SUCCESS') {\n    return 'success';\n  }\n  if (action.type === 'POST_CHANGE_FAILURE') {\n    return 'failure';\n  }\n  if (action.type === 'SET_POSTCHANGE_STATUS_TO_NONE') {\n    return 'none';\n  }\n  return state;\n};\n\nconst isAuth = (state = false, action) => {\n  if (action.type === 'SET_AUTH') {\n    return !action.payload.auth;\n  }\n  return state;\n};\n\nconst favoriteRequestsStatus = (state = 'none', action) => {\n  if (action.type === 'FAVORITE_REQUESTED') {\n    return 'requested';\n  }\n  if (action.type === 'FAVORITE_SUCCESS') {\n    return 'success';\n  }\n  if (action.type === 'FAVORITE_FAILURE') {\n    return 'failure';\n  }\n  return state;\n};\n\nconst articles = (state = {}, action) => {\n  if (action.type === 'SET_ARTICLES') {\n    return {\n      articles: action.payload.data.articles,\n      totalCount: action.payload.data.articlesCount,\n    };\n  }\n  if (action.type === 'SET_FAVORITED' || action.type === 'DELETE_FAVORITED') {\n    const newArticles = state.articles.map(item => {\n      if (item.slug === action.payload.article.slug) {\n        return action.payload.article;\n      }\n      return item;\n    });\n    return {\n      articles: newArticles,\n      totalCount: state.totalCount,\n    };\n  }\n  if (action.type === 'SET_FILTERED_ARTICLES') {\n    return {\n      articles: action.payload.data.articles,\n      totalCount: action.payload.data.articlesCount,\n    };\n  }\n  return state;\n};\n\nconst user = (state = {}, action) => {\n  if (action.type === 'ADD_USERDATA') {\n    return { ...action.payload.user };\n  }\n  return state;\n};\n\nconst filteredBy = (state = null, action) => {\n  if (action.type === 'SET_FILTERED_ARTICLES') {\n    return action.payload.tag;\n  }\n  if (action.type === 'RESET_FILTER') {\n    return null;\n  }\n  return state;\n};\n\nconst errorMsg = (state = null, action) => {\n  if (action.type === 'ADD_ERROR_MESSAGE') {\n    const { email, username, password } = action.payload.err;\n    return {\n      email,\n      username,\n      password,\n      emailOrPassword: 'Email or password is invalid',\n    };\n  }\n  return state;\n};\n\nexport default combineReducers({\n  requestStatus,\n  articles,\n  article,\n  favoriteRequestsStatus,\n  errorMsg,\n  isAuth,\n  slug,\n  changePostStatus,\n  filteredBy,\n  user,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './redusers/index';\n\n// eslint-disable-next-line no-underscore-dangle\n// const devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}