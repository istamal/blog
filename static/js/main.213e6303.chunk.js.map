{"version":3,"sources":["actions/index.js","components/AnimatedHeart.jsx","components/RenderPosts.jsx","components/Login.jsx","components/Signup.jsx","components/Post.jsx","components/Header.jsx","components/Footer.jsx","components/AddPost.jsx","components/EditPost.jsx","App.jsx","serviceWorker.js","redusers/index.js","index.jsx"],"names":["axios","interceptors","request","use","config","token","localStorage","getItem","newConfig","headers","common","Authorization","error","Promise","reject","setArticles","data","type","payload","setFilteredArticles","tag","addErrorMsg","err","setAuth","auth","setPostChangeStatusToNone","addUserData","user","fatchFavorite","slug","dispatch","a","post","response","article","unFavorite","delete","connect","state","favoriteRequestsStatus","HeartFilled","style","color","className","actionCreators","setSlug","getArticles","get","getPageArticles","page","offsetVal","deleteArticle","actions","filterByTag","resetFilter","RenderPosts","props","handleLike","evt","title","target","closest","getAttribute","setState","handleOfGettingArticles","componentDidMount","this","articles","requestStatus","filteredBy","onClick","to","map","item","key","uniqueId","alt","src","author","image","formatDistance","Date","createdAt","now","addSuffix","username","body","tagList","length","favoritesCount","favorited","onChange","defaultCurrent","total","totalCount","React","Component","defaultProps","authenticate","values","path","setItem","errors","Login","loginValidation","Yup","shape","email","required","password","min","matches","formik","useFormik","initialValues","validationSchema","onSubmit","touched","handleBlur","handleChange","handleSubmit","errorMsg","name","placeholder","prefix","UserOutlined","value","onBlur","Password","LockOutlined","emailOrPassword","disabled","htmlType","addUser","singupValidation","label","actionCreaters","getTargetArticle","endpoint","deletePost","options","method","url","then","status","Post","id","changePostStatus","danger","Header","isAuth","icon","clear","Footer","MailOutlined","href","addPost","postValuesValidation","description","render","TextArea","arrayHelpers","index","remove","insert","push","editPost","newValues","EditPost","authenticateWithToken","App","basename","exact","component","Signup","Boolean","window","location","hostname","match","combineReducers","action","articlesCount","newArticles","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","compose","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.213e6303.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    const newConfig = config;\n    if (token) {\n      newConfig.headers.common.Authorization = `Token ${token}`;\n    }\n    return newConfig;\n  },\n  (error) => Promise.reject(error),\n);\n\nexport const setSlug = (slug) => ({\n  type: 'SET_SLUG',\n  payload: {\n    slug,\n  },\n});\n\nexport const requestSend = () => ({\n  type: 'REQUEST_SEND',\n});\n\nexport const requestSuccess = () => ({\n  type: 'REQUEST_SUCCESS',\n});\n\nexport const requestFailure = () => ({\n  type: 'REQUEST_FAILURE',\n});\n\nexport const setArticles = (data) => ({\n  type: 'SET_ARTICLES',\n  payload: {\n    data,\n  },\n});\n\nexport const setArticle = (article) => ({\n  type: 'SET_ARTICLE',\n  payload: {\n    article,\n  },\n});\n\nexport const deleteArticle = () => ({\n  type: 'DELETE_ARTICLE',\n});\n\nexport const getArticles = () => async (dispatch) => {\n  dispatch(requestSend());\n  try {\n    const response = await axios.get('https://conduit.productionready.io/api/articles?limit=10');\n    dispatch(setArticles(response.data));\n    dispatch(requestSuccess());\n  } catch (err) {\n    dispatch(requestFailure());\n  }\n};\n\nexport const setFilteredArticles = (data, tag) => ({\n  type: 'SET_FILTERED_ARTICLES',\n  payload: {\n    data,\n    tag,\n  },\n});\n\nexport const resetFilter = () => ({\n  type: 'RESET_FILTER',\n});\n\nexport const filterByTag = (tag) => async (dispatch) => {\n  dispatch(requestSend());\n  try {\n    const response = await axios.get(`https://conduit.productionready.io/api/articles?limit=10&tag=${tag}`);\n    dispatch(setFilteredArticles(response.data, tag));\n    dispatch(requestSuccess());\n  } catch (err) {\n    dispatch(requestFailure());\n  }\n};\n\nexport const addErrorMsg = (err) => ({\n  type: 'ADD_ERROR_MESSAGE',\n  payload: {\n    err,\n  },\n});\n\nexport const getPageArticles = (page) => async (dispatch) => {\n  dispatch(requestSend());\n  try {\n    const offsetVal = (page - 1) * 10;\n    const response = await axios.get(\n      `https://conduit.productionready.io/api/articles?limit=10&offset=${offsetVal}`,\n    );\n    dispatch(setArticles(response.data));\n    dispatch(requestSuccess());\n  } catch (err) {\n    dispatch(requestFailure());\n  }\n};\n\nexport const getTargetArticle = (endpoint) => async (dispatch) => {\n  dispatch(requestSend());\n  try {\n    const response = await axios.get(`https://conduit.productionready.io/api${endpoint}`);\n    dispatch(setArticle(response.data.article));\n    dispatch(requestSuccess());\n  } catch (err) {\n    dispatch(requestFailure());\n  }\n};\n\nexport const setAuth = (auth) => ({\n  type: 'SET_AUTH',\n  payload: {\n    auth,\n  },\n});\n\nexport const postChangeRequest = () => ({\n  type: 'POST_CHANGE_REQUESTED',\n});\n\nexport const postChangeSuccess = () => ({\n  type: 'POST_CHANGE_SUCCESS',\n});\n\nexport const postChangeFailure = () => ({\n  type: 'POST_CHANGE_FAILURE',\n});\n\nexport const setPostChangeStatusToNone = () => ({\n  type: 'SET_POSTCHANGE_STATUS_TO_NONE',\n});\n\nexport const addPost = (values) => async (dispatch) => {\n  dispatch(postChangeRequest());\n  try {\n    const options = {\n      method: 'Post',\n      data: { article: values },\n      url: 'https://conduit.productionready.io/api/articles',\n    };\n    axios(options).then((response) => {\n      if (response.status === 200) {\n        return dispatch(postChangeSuccess());\n      }\n      return dispatch(postChangeFailure());\n    });\n  } catch (err) {\n    dispatch(postChangeFailure());\n  }\n};\n\nexport const editPost = (values, slug) => async (dispatch) => {\n  const newValues = values;\n  if (!newValues.tagList.length > 0) {\n    newValues.tagList = [''];\n  }\n  dispatch(postChangeRequest());\n  try {\n    const options = {\n      method: 'Put',\n      data: { article: newValues },\n      url: `https://conduit.productionready.io/api/articles/${slug}`,\n    };\n    axios(options).then((response) => {\n      if (response.status === 200) {\n        return dispatch(postChangeSuccess());\n      }\n      return dispatch(postChangeFailure());\n    });\n  } catch (err) {\n    dispatch(postChangeFailure());\n  }\n};\n\nexport const deletePost = (slug) => async (dispatch) => {\n  dispatch(postChangeRequest());\n  try {\n    const options = {\n      method: 'Delete',\n      url: `https://conduit.productionready.io/api/articles/${slug}`,\n    };\n    axios(options).then((response) => {\n      if (response.status === 200) {\n        return dispatch(postChangeSuccess());\n      }\n      return dispatch(postChangeFailure());\n    });\n  } catch (err) {\n    dispatch(postChangeFailure());\n  }\n};\n\nexport const addUserData = (user) => ({\n  type: 'ADD_USERDATA',\n  payload: {\n    user,\n  },\n});\n\nexport const addUser = (values, path) => async (dispatch) => {\n  dispatch(requestSend());\n  try {\n    const response = await axios.post(path, { user: values });\n    dispatch(addUserData(response.data));\n    localStorage.setItem('user', response.data.user.username);\n    dispatch(requestSuccess());\n    dispatch(setAuth());\n  } catch (error) {\n    dispatch(addErrorMsg(error.response.data.errors));\n    dispatch(requestFailure());\n  }\n};\n\nexport const authenticate = (values, path) => async (dispatch) => {\n  dispatch(requestSend());\n  try {\n    const response = await axios.post(path, { user: values });\n    dispatch(addUserData(response.data.user));\n    localStorage.setItem('user', response.data.user.username);\n    localStorage.setItem('token', response.data.user.token);\n    dispatch(requestSuccess());\n    await dispatch(setAuth(false));\n  } catch (error) {\n    dispatch(requestFailure());\n    dispatch(addErrorMsg(error.response.data.errors));\n  }\n};\n\nexport const authenticateWithToken = () => async (dispatch) => {\n  dispatch(requestSend());\n  try {\n    const response = await axios.get('https://conduit.productionready.io/api/user');\n    localStorage.setItem('token', response.data.user.token);\n    dispatch(requestSuccess());\n    dispatch(addUserData(response.data.user));\n    dispatch(setAuth(false));\n  } catch (error) {\n    localStorage.clear();\n    dispatch(setAuth(true));\n    dispatch(requestFailure());\n    throw error;\n  }\n};\n\nexport const setFavorited = (article) => ({\n  type: 'SET_FAVORITED',\n  payload: {\n    article,\n  },\n});\n\nexport const deleteFavorited = (article) => ({\n  type: 'DELETE_FAVORITED',\n  payload: {\n    article,\n  },\n});\n\nexport const requestFavorite = () => ({\n  type: 'FAVORITE_REQUESTED',\n});\n\nexport const favoriteSuccess = () => ({\n  type: 'FAVORITE_SUCCESS',\n});\n\nexport const favoriteFailure = () => ({\n  type: 'FAVORITE_FAILURE',\n});\n\nexport const fatchFavorite = (slug) => async (dispatch) => {\n  dispatch(requestFavorite());\n  try {\n    const response = await axios.post(`https://conduit.productionready.io/api/articles/${slug}/favorite`);\n    dispatch(setFavorited(response.data.article));\n    dispatch(favoriteSuccess());\n  } catch (err) {\n    dispatch(favoriteFailure());\n  }\n};\n\nexport const unFavorite = (slug) => async (dispatch) => {\n  dispatch(requestFavorite());\n  try {\n    const response = await axios.delete(`https://conduit.productionready.io/api/articles/${slug}/favorite`);\n    dispatch(deleteFavorited(response.data.article));\n    dispatch(favoriteSuccess());\n  } catch (err) {\n    dispatch(favoriteFailure());\n  }\n};\n","import React from 'react';\nimport { HeartFilled } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\n\nconst mapStateToProps = (state) => ({\n  favoriteRequestsStatus: state.favoriteRequestsStatus,\n});\n\nconst AnimatedHeart = ({ favoriteRequestsStatus }) => (\n  favoriteRequestsStatus === 'requested'\n  && <HeartFilled style={{ color: 'red' }} className=\"animated\" />\n);\n\nAnimatedHeart.propTypes = {\n  favoriteRequestsStatus: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps)(AnimatedHeart);\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport { Tag, Pagination, Spin } from 'antd';\nimport { HeartFilled } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\nimport { connect } from 'react-redux';\nimport { uniqueId } from 'lodash';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions/index';\nimport AnimatedHeart from './AnimatedHeart';\n\nconst mapStateToProps = (state) => ({\n  articles: state.articles,\n  requestStatus: state.requestStatus,\n  filteredBy: state.filteredBy,\n});\n\nconst actionCreators = {\n  setSlug: actions.setSlug,\n  getArticles: actions.getArticles,\n  getPageArticles: actions.getPageArticles,\n  deleteArticle: actions.deleteArticle,\n  fatchFavorite: actions.fatchFavorite,\n  unFavorite: actions.unFavorite,\n  filterByTag: actions.filterByTag,\n  resetFilter: actions.resetFilter,\n};\n\nclass RenderPosts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      slug: '',\n    };\n  }\n\n  handleLike = (evt) => {\n    const { target } = evt;\n    const title = target.closest('.card__content').getAttribute('data');\n    this.setState({ slug: title });\n  }\n\n  handleOfGettingArticles = () => {\n    const { getArticles, deleteArticle, resetFilter } = this.props;\n    deleteArticle();\n    getArticles();\n    resetFilter();\n  }\n\n  componentDidMount = () => {\n    this.handleOfGettingArticles();\n  };\n\n  render() {\n    const { slug } = this.state;\n\n    const {\n      articles,\n      getPageArticles,\n      setSlug,\n      requestStatus,\n      fatchFavorite,\n      unFavorite,\n      filterByTag,\n      filteredBy,\n    } = this.props;\n    return (\n      <main className=\"container padding-top margin-bottom\">\n        <div className=\"nav-links margin-bottom\">\n          <Link onClick={this.handleOfGettingArticles} className=\"nav-link\" to=\"/\">\n            Все статьи\n            {' >'}\n          </Link>\n          {filteredBy !== 'none' && (<span className=\"nav-link\">{` ${filteredBy}`}</span>)}\n        </div>\n        {filteredBy !== 'none' && (\n        <div className=\"margin-bottom\">\n          Все статьи с меткой\n          {' '}\n          <Tag color=\"orangered\">{filteredBy}</Tag>\n        </div>\n        )}\n        {requestStatus === 'success' && (\n          articles.articles.map((item) => (\n            <div key={uniqueId()} className=\"post-card\">\n              <img className=\"avatar\" alt=\"AVATAR\" src={item.author.image} />\n              <div className=\"card__content\" data={item.slug}>\n                <Link\n                  onClick={() => setSlug(item.slug)}\n                  to={`/articles/${item.slug}`}\n                  className=\"title\"\n                >\n                  {item.title}\n                </Link>\n                <div className=\"meta\">\n                  <span className=\"date\">\n                    {formatDistance(new Date(item.createdAt), Date.now(), { addSuffix: true })}\n                  </span>\n                  <span className=\"author\">{item.author.username}</span>\n                </div>\n                <p>{item.body}</p>\n                <div className=\"links\">\n                  {item.tagList.length\n                    ? item.tagList.map((tag) => (\n                      <Tag key={uniqueId()} color=\"orangered\" onClick={() => filterByTag(tag)}>\n                        {tag}\n                      </Tag>\n                    ))\n                    : null}\n                  <span className=\"favorites-count\">{item.favoritesCount}</span>\n                  {item.favorited ? (\n                    <span className=\"heart-container\" onClick={this.handleLike}>\n                      <HeartFilled style={{ color: 'red' }} onClick={() => unFavorite(item.slug)} />\n                      {item.slug === slug && <AnimatedHeart />}\n                    </span>\n                  ) : (\n                    <span className=\"heart-container\" onClick={this.handleLike}>\n                      <HeartFilled onClick={() => fatchFavorite(item.slug)} />\n                      {item.slug === slug && <AnimatedHeart />}\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n        {requestStatus === 'requested' && (\n          <div className=\"max-width margin-bottom\">\n            <Spin className=\"center\" />\n          </div>\n        )}\n        {requestStatus === 'failure' && (\n          <div className=\"max-width margin-bottom\">\n            <p>Возможно проблемы с интернетом перезагрузите страницу позже</p>\n          </div>\n        )}\n        <div className=\"max-width\">\n          <Pagination onChange={getPageArticles} defaultCurrent=\"1\" total={articles.totalCount} />\n        </div>\n      </main>\n    );\n  }\n}\n\nRenderPosts.propTypes = {\n  getArticles: PropTypes.func.isRequired,\n  articles: PropTypes.object,\n  getPageArticles: PropTypes.func.isRequired,\n  setSlug: PropTypes.func.isRequired,\n  deleteArticle: PropTypes.func.isRequired,\n  requestStatus: PropTypes.string.isRequired,\n  fatchFavorite: PropTypes.func.isRequired,\n  unFavorite: PropTypes.func.isRequired,\n  filterByTag: PropTypes.func.isRequired,\n  filteredBy: PropTypes.string.isRequired,\n  resetFilter: PropTypes.func.isRequired,\n};\n\nRenderPosts.defaultProps = {\n  articles: {},\n};\n\nexport default connect(mapStateToProps, actionCreators)(RenderPosts);\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport { Input, Button, Spin } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport * as actions from '../actions/index';\n\nconst actionCreators = {\n  authenticate: actions.authenticate,\n};\n\nconst mapStateToProps = (state) => ({\n  errorMsg: state.errorMsg,\n  requestStatus: state.requestStatus,\n});\n\nconst Login = (props) => {\n  const loginValidation = Yup.object().shape({\n    email: Yup.string()\n      .email('Укожите корректный email')\n      .required('Обязательное поле'),\n    password: Yup.string()\n      .required('Вы не ввели пароль')\n      .min(8, 'Должно быть не менее 8 символов')\n      .matches(/(?=.*[0-9])/, 'Пароль должень содержать хотя бы одну цифру')\n      .matches(/(?=.*[a-z])/, 'Пароль должень содержать хотя бы одну букву латинского алфавита'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: loginValidation,\n    onSubmit: (values) => {\n      const { authenticate } = props;\n      authenticate(values, 'https://conduit.productionready.io/api/users/login');\n    },\n  });\n\n  const {\n    errors, values, touched, handleBlur, handleChange, handleSubmit,\n  } = formik;\n\n  const { errorMsg, requestStatus } = props;\n\n  return (\n    <div className=\"container padding-top\">\n      <div className=\"nav-links margin-bottom\">\n        <Link className=\"nav-link\" to=\"/\">\n          Все статьи\n          {' >'}\n        </Link>\n        <Link className=\"nav-link\" to=\"/login\">\n          {' '}\n          Войти\n        </Link>\n      </div>\n      <form name=\"normal_login\" onSubmit={handleSubmit}>\n        <div className=\"margin-bottom\">\n          <Input\n            name=\"email\"\n            placeholder=\"E-mail\"\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          {errors.email && touched.email && <div className=\"red\">{errors.email}</div>}\n        </div>\n        <div className=\"margin-bottom\">\n          <Input.Password\n            name=\"password\"\n            placeholder=\"Пароль\"\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          {errors.password && touched.password && <div className=\"red\">{errors.password}</div>}\n        </div>\n        {errorMsg && <div className=\"red\">{errorMsg.emailOrPassword}</div>}\n        <Button\n          disabled={requestStatus === 'requested'}\n          htmlType=\"submit\"\n          className=\"margin-right\"\n          type=\"primary\"\n        >\n          Войти\n        </Button>\n        {requestStatus === 'requested' && <Spin className=\"left-margin margin-right\" />}\n        <Link to=\"/signup\">Регистрация</Link>\n      </form>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n  emailOrPassword: PropTypes.string,\n  requestStatus: PropTypes.string.isRequired,\n  errorMsg: PropTypes.object,\n};\n\nLogin.defaultProps = {\n  errorMsg: null,\n  emailOrPassword: '',\n};\n\nexport default connect(mapStateToProps, actionCreators)(Login);\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport * as Yup from 'yup';\nimport * as actions from '../actions/index';\n\nconst actionCreators = {\n  addUser: actions.addUser,\n};\n\nconst mapStateToProps = (state) => ({\n  errorMsg: state.errorMsg,\n  requestStatus: state.requestStatus,\n});\n\nconst Signup = ({ errorMsg, requestStatus, addUser }) => {\n  const singupValidation = Yup.object().shape({\n    email: Yup.string()\n      .email('Укожите корректный email')\n      .required('Обязательное поле'),\n    password: Yup.string()\n      .required('Вы не ввели пароль')\n      .min(8, 'Должно быть не менее 8 символов')\n      .matches(/(?=.*[0-9])/, 'Пароль должень содержать хотя бы одну цифру')\n      .matches(/(?=.*[a-z])/, 'Пароль должень содержать хотя бы одну букву латинского алфавита'),\n    username: Yup.string()\n      .required('Вы не ввели имя пользователя'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: singupValidation,\n    onSubmit: (values) => {\n      addUser(values, 'https://conduit.productionready.io/api/users');\n    },\n  });\n\n  const {\n    values, errors, touched, handleChange, handleSubmit, handleBlur,\n  } = formik;\n\n  const renderForm = () => (\n    <div className=\"container padding-top\">\n      <div className=\"nav-links margin-bottom\">\n        <Link className=\"nav-link\" to=\"/\">\n          Все статьи\n          {' >'}\n        </Link>\n        <Link className=\"nav-link\" to=\"/signup\">\n          {' '}\n          Регистрация\n        </Link>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <div className=\"margin-bottom\">\n          <Input\n            name=\"email\"\n            placeholder=\"E-mail\"\n            label=\"E-mail\"\n            type=\"email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          {errorMsg && <div className=\"red\">{errorMsg.email}</div>}\n          {errors.email && touched.email && <div className=\"red\">{errors.email}</div>}\n        </div>\n        <div className=\"margin-bottom\">\n          <Input.Password\n            name=\"password\"\n            placeholder=\"Пароль\"\n            label=\"Password\"\n            type=\"password\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          {errorMsg && <div className=\"red\">{errorMsg.password}</div>}\n          {errors.password && touched.password && <div className=\"red\">{errors.password}</div>}\n        </div>\n        <div className=\"margin-bottom\">\n          <Input\n            placeholder=\"Имя Пользователя\"\n            name=\"username\"\n            label=\"Nickname\"\n            value={values.username}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          {errorMsg && <div className=\"red\">{errorMsg.username}</div>}\n          {errors.username && touched.username && <div className=\"red\">{errors.username}</div>}\n        </div>\n        <Button className=\"margin-right\" type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n        {requestStatus === 'requested' && <Spin className=\"left-margin\" />}\n        <Link to=\"/login\">Войти</Link>\n      </form>\n    </div>\n  );\n\n  return renderForm();\n};\n\nexport default connect(mapStateToProps, actionCreators)(Signup);\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\nimport { HeartFilled } from '@ant-design/icons';\nimport { Tag, Spin, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions/index';\nimport AnimatedHeart from './AnimatedHeart';\n\nconst actionCreaters = {\n  getTargetArticle: actions.getTargetArticle,\n  deletePost: actions.deletePost,\n  unFavorite: actions.unFavorite,\n  fatchFavorite: actions.fatchFavorite,\n  setPostChangeStatusToNone: actions.setPostChangeStatusToNone,\n};\n\nconst mapStateToProps = (state) => ({\n  article: state.article,\n  slug: state.slug,\n  changePostStatus: state.changePostStatus,\n  requestStatus: state.requestStatus,\n  user: state.user,\n});\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.id = 0;\n  }\n\n  componentDidMount = () => {\n    const { getTargetArticle, slug } = this.props;\n    getTargetArticle(`/articles/${slug}`);\n  };\n\n  render() {\n    const {\n      article,\n      changePostStatus,\n      setPostChangeStatusToNone,\n      slug,\n      deletePost,\n      unFavorite,\n      fatchFavorite,\n      user,\n    } = this.props;\n\n    if (changePostStatus === 'success') {\n      return (\n        <div className=\"container post-card padding-top\">\n          <p className=\"margin-right\">Пост успешно удолен</p>\n          <br />\n          <Link onClick={() => setPostChangeStatusToNone()} to=\"/\">\n            ok\n          </Link>\n        </div>\n      );\n    }\n    return article ? (\n      <main className=\"padding-top\">\n        <div className=\"nav-links container margin-bottom\">\n          <Link className=\"nav-link\" to=\"/\">\n            Все статьи\n            {' >'}\n          </Link>\n          <Link className=\"nav-link\" to={`/articles/${article.slug}`}>\n            {' '}\n            Страница поста\n          </Link>\n        </div>\n        <div className=\"post-card container\">\n          <img className=\"avatar\" alt=\"AVATAR\" src={article.author.image} />\n          <div className=\"card__content\">\n            <h1 className=\"title\">{article.title}</h1>\n            <div className=\"meta\">\n              <span className=\"date\">\n                {formatDistance(new Date(article.createdAt), Date.now(), { addSuffix: true })}\n              </span>\n              <span className=\"author\">{article.author.username}</span>\n            </div>\n            <p>{article.body}</p>\n            <div className=\"links\">\n              {article.tagList.length\n                ? article.tagList.map((tag) => {\n                  this.id += 1;\n                  return <Tag key={this.id} color=\"orangered\">{tag}</Tag>;\n                })\n                : null}\n              <span className=\"favorites-count\">{article.favoritesCount}</span>\n              {article.favorited ? (\n                <span className=\"heart-container\">\n                  <HeartFilled style={{ color: 'red' }} onClick={() => unFavorite(article.slug)} className=\"like\" />\n                  <AnimatedHeart />\n                </span>\n              ) : (\n                <span className=\"heart-container\">\n                  <HeartFilled onClick={() => fatchFavorite(article.slug)} className=\"like\" />\n                  <AnimatedHeart />\n                </span>\n              )}\n            </div>\n            {article.author.username === user.username && (\n              <div className=\"remove\">\n                <Button\n                  className=\"margin-right\"\n                  disabled={changePostStatus === 'sended'}\n                  onClick={() => deletePost(slug)}\n                  type=\"primary\"\n                  danger\n                >\n                  Удолить\n                </Button>\n                {changePostStatus === 'sended' && <Spin className=\"margin-right\" />}\n                <Button\n                  disabled={changePostStatus === 'sended'}\n                  type=\"primary\"\n                >\n                  <Link to={`/articles/${slug}/edit`}>Изменить</Link>\n                </Button>\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n    ) : (\n      <div className=\"padding-top max-width margin-bottom\">\n        <Spin className=\"center\" />\n      </div>\n    );\n  }\n}\n\nPost.propTypes = {\n  article: PropTypes.object,\n  changePostStatus: PropTypes.string.isRequired,\n  setPostChangeStatusToNone: PropTypes.func.isRequired,\n  slug: PropTypes.string.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  getTargetArticle: PropTypes.func.isRequired,\n  unFavorite: PropTypes.func.isRequired,\n  fatchFavorite: PropTypes.func.isRequired,\n  user: PropTypes.object,\n};\n\nPost.defaultProps = {\n  article: null,\n  user: null,\n};\n\nexport default connect(mapStateToProps, actionCreaters)(Post);\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport { Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { UserOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions/index';\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.isAuth,\n  user: state.user,\n});\n\nconst actionCreators = {\n  setAuth: actions.setAuth,\n};\n\nconst Header = ({ setAuth, isAuth, user }) => {\n  const handleAuth = () => {\n    setAuth(isAuth);\n    localStorage.clear();\n  };\n\n  return (\n    <header>\n      <div className=\"header__wrapper container\">\n        <Link to=\"/\">\n          <h1 className=\"logo\">Blog</h1>\n        </Link>\n        <div className=\"user\">\n          {isAuth && (\n            <Link className=\"user-btn margin-right\" to=\"/add\">\n              Добавить пост\n            </Link>\n          )}\n          <div className=\"user-name\">\n            <Avatar icon={<UserOutlined />} />\n            {isAuth ? (\n              <span className=\"user-nick\">{user.username}</span>\n            ) : (\n              <span className=\"user-nick\">Вы не авторизованы</span>\n            )}\n          </div>\n          {isAuth ? (\n            <Link onClick={handleAuth} className=\"user-btn\" to=\"/\">\n              Выйти\n            </Link>\n          ) : (\n            <Link className=\"user-btn\" to=\"/login\">\n              Войти\n            </Link>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  setAuth: PropTypes.func.isRequired,\n  isAuth: PropTypes.bool.isRequired,\n  user: PropTypes.object,\n};\n\nHeader.defaultProps = {\n  user: null,\n};\n\nexport default connect(mapStateToProps, actionCreators)(Header);\n","import React from 'react';\nimport { MailOutlined } from '@ant-design/icons';\n\nconst Footer = () => (\n  <div className=\"footer\">\n    <p>Desined by Istamal Dagalaev</p>\n    <MailOutlined className=\"m-right-gap\" />\n    <a href=\"mailto:dagalaev@gmail.com\">dagalaev@gmail.com</a>\n  </div>\n);\n\nexport default Footer;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport {\n  Formik, Form, FieldArray, Field,\n} from 'formik';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport * as Yup from 'yup';\nimport * as actions from '../actions/index';\n\nconst mapStateToProps = (state) => ({\n  changePostStatus: state.changePostStatus,\n});\n\nconst actionCreators = {\n  addPost: actions.addPost,\n  setPostChangeStatusToNone: actions.setPostChangeStatusToNone,\n};\n\nconst AddPost = ({ changePostStatus, setPostChangeStatusToNone, addPost }) => {\n  const postValuesValidation = Yup.object().shape({\n    title: Yup.string()\n      .required('Обязательное поле')\n      .min(3, 'Не менее 3 символов'),\n    description: Yup.string()\n      .required('Обязательное поле')\n      .min(10, 'Не менее 10 символов'),\n    body: Yup.string()\n      .required('Обязательное поле')\n      .min(20, 'Не менее 20 символов'),\n  });\n\n  return changePostStatus === 'success' ? (\n    <main className=\"container post-card padding-top\">\n      <p className=\"margin-right\">Пост успешно добавлен</p>\n      <br />\n      <Link onClick={() => setPostChangeStatusToNone()} to=\"/\">\n        ok\n      </Link>\n    </main>\n  ) : (\n    <div className=\"container padding-top\">\n      <div className=\"nav-links margin-bottom\">\n        <Link className=\"nav-link\" to=\"/\">\n          Все статьи\n          {' >'}\n        </Link>\n        <Link className=\"nav-link\" to=\"/add\">\n          {' '}\n          Добавить статью\n        </Link>\n      </div>\n      <Formik\n        initialValues={{\n          title: '',\n          description: '',\n          body: '',\n          tagList: [],\n        }}\n        validationSchema={postValuesValidation}\n        onSubmit={(values) => {\n          addPost(values);\n        }}\n        render={({\n          values, handleChange, errors, handleBlur, touched,\n        }) => (\n          <Form>\n            <div className=\"margin-bottom\">\n              <Input\n                placeholder=\"Заголовок\"\n                name=\"title\"\n                value={values.title}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.title && touched.title && <div className=\"red s-size\">{errors.title}</div>}\n            </div>\n            <div className=\"margin-bottom\">\n              <Input\n                placeholder=\"Описание\"\n                name=\"description\"\n                value={values.description}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.description && touched.description && (\n              <div className=\"red s-size\">{errors.description}</div>\n              )}\n            </div>\n            <div className=\"margin-bottom\">\n              <Input.TextArea\n                placeholder=\"Текст\"\n                name=\"body\"\n                value={values.body}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.body && touched.body && <div className=\"red s-size\">{errors.body}</div>}\n            </div>\n            <FieldArray\n              placeholder=\"Метки\"\n              name=\"tagList\"\n              render={(arrayHelpers) => (\n                <div>\n                  {values.tagList && values.tagList.length > 0 ? (\n                    values.tagList.map((tag, index) => (\n                      <div key={index}>\n                        <Field\n                          className=\"input margin-bottom m-right-gap\"\n                          name={`tagList.${index}`}\n                        />\n                        <Button\n                          type=\"button\"\n                          className=\"m-right-gap\"\n                          danger\n                          onClick={() => arrayHelpers.remove(index)}\n                        >\n                          -\n                        </Button>\n                        <Button type=\"button\" onClick={() => arrayHelpers.insert(index, '')}>\n                          +\n                        </Button>\n                      </div>\n                    ))\n                  ) : (\n                    <Button\n                      className=\"margin-bottom\"\n                      type=\"primary\"\n                      onClick={() => arrayHelpers.push('')}\n                    >\n                      Добавить тег\n                    </Button>\n                  )}\n                  <div>\n                    <Button\n                      className=\"margin-right\"\n                      disabled={changePostStatus === 'sended'}\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                    >\n                      Отправить\n                    </Button>\n                    {changePostStatus === 'sended' && <Spin className=\"margin-right\" />}\n                  </div>\n                </div>\n              )}\n            />\n          </Form>\n        )}\n      />\n    </div>\n  );\n};\n\nAddPost.propTypes = {\n  changePostStatus: PropTypes.string.isRequired,\n  setPostChangeStatusToNone: PropTypes.func.isRequired,\n  addPost: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(AddPost);\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport {\n  Formik,\n  Form,\n  FieldArray,\n  Field,\n} from 'formik';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport * as Yup from 'yup';\nimport * as actions from '../actions/index';\n\nconst mapStateToProps = (state) => ({\n  changePostStatus: state.changePostStatus,\n  article: state.article,\n  slug: state.slug,\n});\n\nconst actionCreators = {\n  editPost: actions.editPost,\n  setPostChangeStatusToNone: actions.setPostChangeStatusToNone,\n};\n\nconst EditPost = (props) => {\n  const postValuesValidation = Yup.object().shape({\n    title: Yup.string()\n      .required('Обязательное поле')\n      .min(3, 'Не менее 3 символов'),\n    description: Yup.string()\n      .required('Обязательное поле')\n      .min(10, 'Не менее 10 символов'),\n    body: Yup.string()\n      .required('Обязательное поле')\n      .min(20, 'Не менее 20 символов'),\n  });\n\n  const {\n    changePostStatus,\n    setPostChangeStatusToNone,\n    editPost,\n    article,\n    slug,\n  } = props;\n\n  return changePostStatus === 'success' ? (\n    <main className=\"container post-card padding-top\">\n      <p className=\"margin-right\">Изменения добавлены</p>\n      <br />\n      <Link onClick={() => setPostChangeStatusToNone()} to=\"/\">\n        ok\n      </Link>\n    </main>\n  ) : (\n    <div className=\"container padding-top\">\n      <div className=\"nav-links margin-bottom\">\n        <Link className=\"nav-link\" to=\"/\">\n          Все статьи\n          {' >'}\n        </Link>\n        <Link className=\"nav-link\" to={`/articles/${slug}/edit`}>\n          {' '}\n          Изменить статью\n        </Link>\n      </div>\n      <Formik\n        initialValues={{\n          title: article.title,\n          description: article.description,\n          body: article.body,\n          tagList: [...article.tagList],\n        }}\n        validationSchema={postValuesValidation}\n        onSubmit={(values) => {\n          editPost(values, slug);\n        }}\n        render={({\n          values,\n          handleChange,\n          errors,\n          handleBlur,\n          touched,\n        }) => (\n          <Form>\n            <div className=\"margin-bottom\">\n              <Input\n                placeholder=\"Заголовок\"\n                name=\"title\"\n                value={values.title}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.title && touched.title && <div className=\"red s-size\">{errors.title}</div>}\n            </div>\n            <div className=\"margin-bottom\">\n              <Input\n                placeholder=\"Описание\"\n                name=\"description\"\n                value={values.description}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.description && touched.description && (\n              <div className=\"red s-size\">{errors.description}</div>\n              )}\n            </div>\n            <div className=\"margin-bottom\">\n              <Input.TextArea\n                placeholder=\"Текст\"\n                name=\"body\"\n                value={values.body}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              {errors.body && touched.body && <div className=\"red s-size\">{errors.body}</div>}\n            </div>\n            <div className=\"margin-bottom\">\n              <FieldArray\n                placeholder=\"Метки\"\n                name=\"tagList\"\n                render={(arrayHelpers) => (\n                  <div>\n                    {values.tagList && values.tagList.length > 0 ? (\n                      values.tagList.map((tag, index) => (\n                        <div key={index}>\n                          <Field\n                            className=\"input margin-bottom m-right-gap\"\n                            name={`tagList[${index}]`}\n                          />\n                          <Button\n                            type=\"button\"\n                            className=\"m-right-gap\"\n                            danger\n                            onClick={() => arrayHelpers.remove(index)}\n                          >\n                            -\n                          </Button>\n                          <Button type=\"button\" onClick={() => arrayHelpers.insert(index, '')}>\n                            +\n                          </Button>\n                        </div>\n                      ))\n                    ) : (\n                      <Button\n                        className=\"margin-bottom\"\n                        type=\"primary\"\n                        onClick={() => arrayHelpers.push('')}\n                      >\n                        Добавить тег\n                      </Button>\n                    )}\n                    <div>\n                      <Button\n                        className=\"margin-right\"\n                        disabled={changePostStatus === 'sended'}\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                      >\n                        Сочранить\n                      </Button>\n                      {changePostStatus === 'sended' && <Spin className=\"margin-right\" />}\n                    </div>\n                  </div>\n                )}\n              />\n            </div>\n          </Form>\n        )}\n      />\n    </div>\n  );\n};\n\nEditPost.propTypes = {\n  changePostStatus: PropTypes.func.isRequired,\n  setPostChangeStatusToNone: PropTypes.func.isRequired,\n  editPost: PropTypes.func.isRequired,\n  article: PropTypes.object,\n  slug: PropTypes.string.isRequired,\n};\n\nEditPost.defaultProps = {\n  article: null,\n};\n\nexport default connect(mapStateToProps, actionCreators)(EditPost);\n","import React from 'react';\nimport './App.scss';\nimport 'antd/dist/antd.css';\nimport { connect } from 'react-redux';\nimport {\n  BrowserRouter as Router, Route, Switch, Redirect,\n} from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport RenderPosts from './components/RenderPosts';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Post from './components/Post';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport AddPost from './components/AddPost';\nimport * as actions from './actions/index';\nimport EditPost from './components/EditPost';\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.isAuth,\n  slug: state.slug,\n});\n\nconst actionCreators = {\n  authenticateWithToken: actions.authenticateWithToken,\n};\n\nclass App extends React.Component {\n  componentDidMount = () => {\n    const { authenticateWithToken } = this.props;\n    if (localStorage.getItem('token')) {\n      authenticateWithToken();\n    }\n  }\n\n  render() {\n    const { slug, isAuth } = this.props;\n    return (\n      <div className=\"wrapper\">\n        <Router basename=\"/blog\">\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={RenderPosts} />\n            <Route exact path={`/articles/${slug}`} component={Post} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route\n              path=\"/login\"\n              render={(props) => (isAuth ? <Redirect to=\"/\" /> : <Login />)}\n            />\n            <Route\n              path=\"/add\"\n              render={\n                () => (\n                  isAuth\n                    ? <AddPost />\n                    : <Redirect to=\"/Login\" />\n                )\n              }\n            />\n            <Route path={`/articles/${slug}/edit`} component={EditPost} />\n          </Switch>\n          <Footer />\n        </Router>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  slug: PropTypes.string,\n  isAuth: PropTypes.bool.isRequired,\n  authenticateWithToken: PropTypes.func.isRequired,\n};\n\nApp.defaultProps = {\n  slug: null,\n};\n\nexport default connect(mapStateToProps, actionCreators)(App);\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\n\nconst requestStatus = (state = 'none', action) => {\n  switch (action.type) {\n    case 'REQUEST_SEND':\n      return 'requested';\n    case 'REQUEST_SUCCESS':\n      return 'success';\n    case 'REQUEST_FAILURE':\n      return 'failure';\n    default:\n      return state;\n  }\n};\n\nconst article = (state = null, action) => {\n  if (action.type === 'SET_ARTICLE') {\n    return action.payload.article;\n  }\n  if (action.type === 'DELETE_ARTICLE') {\n    return null;\n  }\n  if (action.type === 'SET_FAVORITED' || action.type === 'DELETE_FAVORITED') {\n    return action.payload.article;\n  }\n  return state;\n};\n\nconst slug = (state = null, action) => {\n  if (action.type === 'SET_SLUG') {\n    return action.payload.slug;\n  }\n  return state;\n};\n\nconst changePostStatus = (state = 'none', action) => {\n  if (action.type === 'POST_CHANGE_REQUESTED') {\n    return 'sended';\n  }\n  if (action.type === 'POST_CHANGE_SUCCESS') {\n    return 'success';\n  }\n  if (action.type === 'POST_CHANGE_FAILURE') {\n    return 'failure';\n  }\n  if (action.type === 'SET_POSTCHANGE_STATUS_TO_NONE') {\n    return 'none';\n  }\n  return state;\n};\n\nconst isAuth = (state = false, action) => {\n  if (action.type === 'SET_AUTH') {\n    return !action.payload.auth;\n  }\n  return state;\n};\n\nconst favoriteRequestsStatus = (state = 'none', action) => {\n  if (action.type === 'FAVORITE_REQUESTED') {\n    return 'requested';\n  }\n  if (action.type === 'FAVORITE_SUCCESS') {\n    return 'success';\n  }\n  if (action.type === 'FAVORITE_FAILURE') {\n    return 'failure';\n  }\n  return state;\n};\n\nconst articles = (state = {}, action) => {\n  if (action.type === 'SET_ARTICLES') {\n    return {\n      articles: action.payload.data.articles,\n      totalCount: action.payload.data.articlesCount,\n    };\n  }\n  if (action.type === 'SET_FAVORITED' || action.type === 'DELETE_FAVORITED') {\n    const newArticles = state.articles.map((item) => {\n      if (item.slug === action.payload.article.slug) {\n        return action.payload.article;\n      }\n      return item;\n    });\n    return {\n      articles: newArticles,\n      totalCount: state.totalCount,\n    };\n  }\n  if (action.type === 'SET_FILTERED_ARTICLES') {\n    return {\n      articles: action.payload.data.articles,\n      totalCount: action.payload.data.articlesCount,\n    };\n  }\n  return state;\n};\n\nconst user = (state = {}, action) => {\n  if (action.type === 'ADD_USERDATA') {\n    return { ...action.payload.user };\n  }\n  return state;\n};\n\nconst filteredBy = (state = 'none', action) => {\n  if (action.type === 'SET_FILTERED_ARTICLES') {\n    return action.payload.tag;\n  }\n  if (action.type === 'RESET_FILTER') {\n    return 'none';\n  }\n  return state;\n};\n\nconst errorMsg = (state = null, action) => {\n  if (action.type === 'ADD_ERROR_MESSAGE') {\n    const { email, username, password } = action.payload.err;\n    return {\n      email,\n      username,\n      password,\n      emailOrPassword: 'Email or password is invalid',\n    };\n  }\n  return state;\n};\n\nexport default combineReducers({\n  requestStatus,\n  articles,\n  article,\n  favoriteRequestsStatus,\n  errorMsg,\n  isAuth,\n  slug,\n  changePostStatus,\n  filteredBy,\n  user,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './redusers/index';\n\n// eslint-disable-next-line no-underscore-dangle\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    devTools,\n  ),\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}